<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on </title>
    <link>/java/</link>
    <description>Recent content in Java on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 20 Sep 2020 18:02:55 +0900</lastBuildDate><atom:link href="/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Oracle Siver Memo</title>
      <link>/java/silver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/java/silver/</guid>
      <description>■可変長引数 〇概要	引数が同じ型であれば、引数を任意の数設定することができる。	〇形式	引数の型の後に.を3つつける	static void Method(String... s){}	※可変長引数を二つ以上含む場合は、可変長引数を最後に記述しないとコンパイルエラーになる。	（可変長引数の後の引数がどこからなのか判断できないため）	 ■エスケープとダブルクオテーション 〇エスケープ	\&amp;quot;	⇒	&amp;quot;	〇ダブルクオテーション &amp;quot;a b&amp;quot;c　⇒　a bc	 ■var 〇決まり	・varによる型推論はローカル変数の宣言にしか使えない。	(=フィールドやメソッド引数の型宣言には使用できない）	 ■String 〇valueOf	Stringを生成するメソッド。	staticなメソッドのため、インスタンスを生成しないで使用できる。	（Stringはコンパイラが勝手に判断して）	例）String s = &amp;quot;aaa&amp;quot;;	s = String.valueOf(&amp;quot;bbb&amp;quot;);	〇indexOf	文字列の中を検索し、そのindexを返すメソッド。	引数に文字列を指定した場合は、その文字列がはじまるindexを返す。	ない場合は-1を返す。	例)	String s = &amp;quot;abcde&amp;quot;;	int aIndex = s.indexOf(&amp;quot;a&amp;quot;);	//aIndex: 0	〇concat	文字列を結合する。	String hello = &amp;quot;Hello&amp;quot;;	hello.concat(&amp;quot; Java!&amp;quot;);	//Hello Java!	 ■StringBuilder 〇概要	保持している文字列+16文字のバッファを持つ。	（文字列を渡した場合は、その文字数+16文字のchar配列が生成される）	〇capacity	容量を返すメソッド。	StringBuilder sb = new StringBuilder(&amp;quot;abcde&amp;quot;);	int cap = sb.</description>
    </item>
    
  </channel>
</rss>
